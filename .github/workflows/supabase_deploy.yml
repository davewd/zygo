name: Deploy Web Assets to Supabase Storage

on:
  workflow_run:
    workflows: ["Run Jest Tests", "Run pnpm scratch"]
    branches: [main, develop]
    types:
      - completed

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if the triggering workflow completed successfully
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build web application
        run: pnpm build --filter=@zygo/web
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        
      - name: Deploy to Supabase Storage
        run: |
          # Set up variables
          SUPABASE_URL="https://${{ secrets.SUPABASE_PROJECT_REF }}.supabase.co"
          ACCESS_TOKEN="${{ secrets.SUPABASE_ACCESS_TOKEN }}"
          BUCKET_NAME="web-assets"
          
          get_content_type() {
            case "${1##*.}" in
              html) echo "text/html" ;;
              js) echo "application/javascript" ;;
              css) echo "text/css" ;;
              json) echo "application/json" ;;
              png) echo "image/png" ;;
              jpg|jpeg) echo "image/jpeg" ;;
              svg) echo "image/svg+xml" ;;
              ico) echo "image/x-icon" ;;
              woff) echo "font/woff" ;;
              woff2) echo "font/woff2" ;;
              ttf) echo "font/ttf" ;;
              txt) echo "text/plain" ;;
              *) echo "application/octet-stream" ;;
            esac
          }

          # Create storage bucket if it doesn't exist (using REST API)
          echo "Creating storage bucket..."
          curl -X POST "${SUPABASE_URL}/storage/v1/bucket" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"id\":\"${BUCKET_NAME}\",\"name\":\"${BUCKET_NAME}\",\"public\":true}" \
            || echo "Bucket may already exist, continuing..."
          
          # Upload built assets to storage
          echo "Uploading assets..."
          find apps/web/dist -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.svg" -o -name "*.ico" -o -name "*.woff" -o -name "*.woff2" -o -name "*.ttf" -o -name "*.json" -o -name "*.txt" \) | while read file; do
            # Get relative path from dist directory
            relative_path=${file#apps/web/dist/}
            content_type=$(get_content_type "$file")
            
            echo "Uploading $file to $relative_path (Content-Type: $content_type)"
            
            # Upload file using Storage API
            curl -X PUT "${SUPABASE_URL}/storage/v1/object/${BUCKET_NAME}/${relative_path}" \
              -H "Authorization: Bearer ${ACCESS_TOKEN}" \
              -H "Content-Type: multipart/form-data" \
              -F "file=@${file};type=${content_type}" \
              || echo "Failed to upload $file, but continuing..."
          done
          
          echo "Deployment completed!"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}